/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package softestandantrop;

import DataBase.DataBase;
import HelpReport.EvaluacionAntropometrista;
import HelpReport.Reporte;
import Modelos.Antropometrista;
import Modelos.Estandarizacion;
import Modelos.Ronda;
import Modelos.RondaAntropometrista;
import Modelos.Sujeto;
import Validation.TiposValidator;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author DAVID
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        this.setLocationRelativeTo(null);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
//        try {
//            UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        
        
        
        initComponents();
        
        //BtnAgregarAntropometrista.putClientProperty("JButton.buttonType", "textured");
        // Create a new mac button based on the JButton.
        //AbstractButton macButton = MacButtonFactory.makeUnifiedToolBarButton(BtnAgregarAntropometrista);
        
        
        init();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        lblHora = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstSujetos = new javax.swing.JList();
        lblRondaSelected = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAntropSelected = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblSujetoSelected = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMed1 = new javax.swing.JTextField();
        lblMed1Ronda = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMed2 = new javax.swing.JTextField();
        lblMed2Ronda = new javax.swing.JLabel();
        btnEditarMedicion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        btnUpdateReporteMediciones = new javax.swing.JButton();
        lblRondaMedicion1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnUpdateCalculoPreExact = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        lblRondaCalcPre = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblAntropCalcPre = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        BtnAgregarAntropometrista = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lblFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/16/Calender 31 Day.png"))); // NOI18N
        lblFecha.setText("FECHA");

        jLabel4.setText("jLabel4");

        lblHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/16/Time 2.png"))); // NOI18N
        lblHora.setText("HORA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblHora))
            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Estandarizaci√≥n 01/01/13");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Ronda 1");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Ronda 2");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Ronda 3");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Ronda 4");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Ronda 5");
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setMinimumSize(new java.awt.Dimension(600, 0));
        jScrollPane1.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jPanel2.setLayout(null);

        lstSujetos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jScrollPane2.setViewportView(lstSujetos);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(40, 70, 150, 470);

        lblRondaSelected.setFont(new java.awt.Font("Kristen ITC", 1, 36)); // NOI18N
        lblRondaSelected.setText("Ronda: ");
        jPanel2.add(lblRondaSelected);
        lblRondaSelected.setBounds(290, 50, 404, 43);

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jLabel1.setText("Antropometrista: ");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(220, 110, 142, 34);
        jPanel2.add(lblAntropSelected);
        lblAntropSelected.setBounds(360, 110, 257, 34);

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jLabel2.setText("Sujeto:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(220, 150, 57, 34);
        jPanel2.add(lblSujetoSelected);
        lblSujetoSelected.setBounds(280, 150, 342, 34);

        jLabel5.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jLabel5.setText("1a Medici√≥n:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(210, 210, 99, 30);

        txtMed1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMed1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMed1FocusLost(evt);
            }
        });
        jPanel2.add(txtMed1);
        txtMed1.setBounds(320, 210, 60, 30);

        lblMed1Ronda.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jPanel2.add(lblMed1Ronda);
        lblMed1Ronda.setBounds(390, 211, 136, 30);

        jLabel6.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jLabel6.setText("2a Medici√≥n:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(210, 260, 100, 30);

        txtMed2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMed2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMed2FocusLost(evt);
            }
        });
        jPanel2.add(txtMed2);
        txtMed2.setBounds(320, 260, 60, 30);

        lblMed2Ronda.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jPanel2.add(lblMed2Ronda);
        lblMed2Ronda.setBounds(390, 261, 137, 30);

        btnEditarMedicion.setText("Editar Mediciones");
        btnEditarMedicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMedicionActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditarMedicion);
        btnEditarMedicion.setBounds(210, 300, 178, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SUJETOS");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jPanel2.add(jLabel3);
        jLabel3.setBounds(40, 40, 150, 40);

        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        jPanel2.add(jLabel8);
        jLabel8.setBounds(20, 30, 580, 530);

        jTabbedPane1.addTab("Sujetos", jPanel2);

        jPanel3.setLayout(null);

        jScrollPane4.setBorder(null);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane4.setEnabled(false);
        jScrollPane4.setMinimumSize(new java.awt.Dimension(2000, 23));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(2000, 19));
        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(10, 130, 910, 380);

        btnUpdateReporteMediciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Symbol Refresh 4.png"))); // NOI18N
        btnUpdateReporteMediciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateReporteMedicionesActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdateReporteMediciones);
        btnUpdateReporteMediciones.setBounds(10, 50, 60, 50);

        lblRondaMedicion1.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        lblRondaMedicion1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRondaMedicion1.setText("Ronda");
        jPanel3.add(lblRondaMedicion1);
        lblRondaMedicion1.setBounds(10, 19, 900, 25);

        jTabbedPane1.addTab("Mediciones", jPanel3);

        btnUpdateCalculoPreExact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Symbol Refresh 4.png"))); // NOI18N
        btnUpdateCalculoPreExact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCalculoPreExactActionPerformed(evt);
            }
        });

        jScrollPane3.setAutoscrolls(true);

        lblRondaCalcPre.setFont(new java.awt.Font("Kristen ITC", 1, 24)); // NOI18N
        lblRondaCalcPre.setText("RONDA");

        jLabel7.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jLabel7.setText("Antropometrista: ");

        lblAntropCalcPre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRondaCalcPre, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdateCalculoPreExact, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(360, 360, 360))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAntropCalcPre, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 171, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRondaCalcPre, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateCalculoPreExact))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAntropCalcPre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Calculos Pre-Exact", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(544, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Evaluaciones", jPanel5);

        jSplitPane1.setRightComponent(jTabbedPane1);
        jTabbedPane1.getAccessibleContext().setAccessibleName("Sujetos");

        jToolBar1.setRollover(true);
        jToolBar1.setEnabled(false);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Logout.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/file_doc.png"))); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setName("BtnAddEstand"); // NOI18N
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Report Edit 2.png"))); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setName("BtnAddRonda"); // NOI18N
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        BtnAgregarAntropometrista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/User 4 Add.png"))); // NOI18N
        BtnAgregarAntropometrista.setFocusable(false);
        BtnAgregarAntropometrista.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnAgregarAntropometrista.setName("BtnAddParticipante"); // NOI18N
        BtnAgregarAntropometrista.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnAgregarAntropometrista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarAntropometristaActionPerformed(evt);
            }
        });
        jToolBar1.add(BtnAgregarAntropometrista);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Patient Man 2 Add.png"))); // NOI18N
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setName("BtnAddSujeto"); // NOI18N
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Chart Bar.png"))); // NOI18N
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Drive USB.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/32/Question.png"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton4);

        jMenu3.setText("Archivo");

        jMenuItem2.setText("Preferencia");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);
        jMenuItem2.getAccessibleContext().setAccessibleName("Preferencias");

        jMenu3.add(jSeparator4);

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Estandarizaci√≥n");

        jMenuItem3.setText("Crear Estandarizaci√≥n");
        jMenu4.add(jMenuItem3);

        jMenuItem11.setText("Crear Ronda");
        jMenu4.add(jMenuItem11);

        jMenuItem4.setText("Agregar Participantes");
        jMenu4.add(jMenuItem4);

        jMenuItem5.setText("Agregar Sujetos");
        jMenu4.add(jMenuItem5);

        jMenuItem6.setText("jMenuItem6");
        jMenu4.add(jMenuItem6);

        jMenuBar2.add(jMenu4);

        jMenu5.setText("Herramientas");

        jMenuItem7.setText("Respaldo de la base datos");
        jMenu5.add(jMenuItem7);

        jMenuItem8.setText("Borrado de base de datos");
        jMenu5.add(jMenuItem8);

        jMenuItem9.setText("Cargo de Datos");
        jMenu5.add(jMenuItem9);

        jMenuItem10.setText("Bitacora de eventos");
        jMenu5.add(jMenuItem10);

        jMenuBar2.add(jMenu5);

        jMenu6.setText("Ayuda");
        jMenuBar2.add(jMenu6);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BtnAgregarAntropometristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarAntropometristaActionPerformed
        AgregarAntropometrista agregarAntropometrista = new AgregarAntropometrista();
    }//GEN-LAST:event_BtnAgregarAntropometristaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       System.exit(1);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new AgregarSujeto();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new AgregarRonda(this);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnEditarMedicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMedicionActionPerformed
        // TODO add your handling code here:
        editarMedicion();
    }//GEN-LAST:event_btnEditarMedicionActionPerformed

    private void btnUpdateCalculoPreExactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCalculoPreExactActionPerformed
        new Thread(){
            public void run(){
                reporte3();
            }
        }.start();
    }//GEN-LAST:event_btnUpdateCalculoPreExactActionPerformed

    private void txtMed2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMed2FocusGained
       if(txtMed2.getText().equals("0.0"))
            txtMed2.setText("");
    }//GEN-LAST:event_txtMed2FocusGained

    private void txtMed2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMed2FocusLost
        if(txtMed2.getText().equals("")){
            txtMed2.setText("0.0");
        }
    }//GEN-LAST:event_txtMed2FocusLost

    private void txtMed1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMed1FocusGained
        if(txtMed1.getText().equals("0.0"))
            txtMed1.setText("");
    }//GEN-LAST:event_txtMed1FocusGained

    private void txtMed1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMed1FocusLost
        if(txtMed1.getText().equals("")){
            txtMed1.setText("0.0");
        }
    }//GEN-LAST:event_txtMed1FocusLost

    private void btnUpdateReporteMedicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateReporteMedicionesActionPerformed
        new Thread(){
            public void run(){
                reporte1();
            }
        }.start();
    }//GEN-LAST:event_btnUpdateReporteMedicionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
        
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregarAntropometrista;
    private javax.swing.JButton btnEditarMedicion;
    private javax.swing.JButton btnUpdateCalculoPreExact;
    private javax.swing.JButton btnUpdateReporteMediciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lblAntropCalcPre;
    private javax.swing.JLabel lblAntropSelected;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblMed1Ronda;
    private javax.swing.JLabel lblMed2Ronda;
    private javax.swing.JLabel lblRondaCalcPre;
    private javax.swing.JLabel lblRondaMedicion1;
    private javax.swing.JLabel lblRondaSelected;
    private javax.swing.JLabel lblSujetoSelected;
    private javax.swing.JList lstSujetos;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextField txtMed1;
    private javax.swing.JTextField txtMed2;
    // End of variables declaration//GEN-END:variables

    DefaultListModel<RondaAntropometrista> modelLstSujetos = new DefaultListModel<RondaAntropometrista>();
    int idRondaSeleccionada = 0;
    RondaAntropometrista rondaSeleccionada;
    Sujeto sujetoSelected;
    Antropometrista antropSelected;
    
    private void init(){
        /*Fecha y Hora*/
        Muestrafecha();
        Muestrahora();
        /*Arbol de Estandarizaciones*/
        updateTree();
        /*Progress Bar*/
        progressBar.setMinimum(0);
        progressBar.setMaximum(100);
        progressBar.setStringPainted(true);
        
        
        

    }
    
    private void Muestrafecha() {
        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String dateNow = formatter.format(currentDate.getTime());
        lblFecha.setText("FECHA: "+dateNow);
    }

    private void Muestrahora() {
        //MUESTRA LA HORA MH
        final SimpleDateFormat formatter2 = new SimpleDateFormat("kk:mm:ss");
        lblHora.setText("HORA: "+formatter2.format(new Date()));
        new javax.swing.Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                lblHora.setText("HORA: "+formatter2.format(new Date()));
            }
        }).start();

    }
    
    
    public void updateTree(){
        try{
            DataBase op = new DataBase();
            CustomMutableTreeNode root = new CustomMutableTreeNode("/",0,0);
            DefaultTreeModel model = new DefaultTreeModel(root);
            List<Estandarizacion> estandarizaciones = op.getAllEstandarizacion();
            int iEstand = 0;
            for(Estandarizacion e:estandarizaciones){
                CustomMutableTreeNode estand = new CustomMutableTreeNode(e.getEncuesta(),1,e.getId());
                model.insertNodeInto(estand, root, iEstand);
                List<Ronda> rondas = op.getAllRondasByEnstandarizacion(e.getId());
                int iRond = 0;
                for(Ronda r:rondas){
                    CustomMutableTreeNode round = new CustomMutableTreeNode(r.getNombre(),2,e.getId(),r.getId());
                    model.insertNodeInto(round, estand, iRond);
                    List<Antropometrista> antrops = op.getAllAntropometristasByRonda(r.getId());
                    int iAnt =0;
                    for(Antropometrista a:antrops){
                        CustomMutableTreeNode ant = new CustomMutableTreeNode(a.getCodigo()+" - "+a.getNombre(),3,r.getId(),a.getCodigo(),false);
                        model.insertNodeInto(ant, round, iAnt);
                        iAnt++;
                    }
                    iRond++;
                }
                iEstand++;
            }
            //jTree1 = new JTree(model);
            jTree1.setModel(model);
            jTree1.setCellRenderer(new CustomIconRenderer());
            jTree1.setRootVisible(false);
            jTree1.setBounds(jTree1.getBounds().x, jTree1.getBounds().y, 700, jTree1.getBounds().height);
            jTree1.setSize(800, 800);
        }
        catch(SQLException se){
            Error.mostrarMensajeError(this, "Error en arbol.\n\n"+se.getMessage(), "Cargando Arbol");
            se.printStackTrace();
        }
        
        jTree1.addTreeSelectionListener(new TreeSelectionListener() {
            @Override
            public void valueChanged(TreeSelectionEvent e) {
                CustomMutableTreeNode node = (CustomMutableTreeNode)
                                   jTree1.getLastSelectedPathComponent();

                try{
                    if (node == null) return;
                    if(node.getTipo()==1){
                        idRondaSeleccionada = 0;
                        lblRondaSelected.setText("");
                        antropSelected = null;
                        lblAntropSelected.setText("");
                        lblSujetoSelected.setText("");
                        txtMed1.setText("");
                        txtMed2.setText("");
                        lblRondaMedicion1.setText("");
                    }
                    if(node.getTipo()==2){
                        idRondaSeleccionada = node.getIdRonda();
                        lblRondaSelected.setText(new DataBase().getRondaById(idRondaSeleccionada).getNombre());
                        antropSelected = null;
                        lblAntropSelected.setText("");
                        lblSujetoSelected.setText("");
                        txtMed1.setText("");
                        txtMed2.setText("");
                    }
                    if(node.getTipo()==3){
                        int idAntropometrista = node.getIdAntropometrista();
                        int idRonda = node.getIdRonda();
                        DataBase op = new DataBase();
                        antropSelected = op.getAntropometristaById(idAntropometrista);
                        List<RondaAntropometrista> sujetos = 
                                op.getAllRondaAntropometristaByAntropometristasByRonda(idRonda, idAntropometrista);
                        modelLstSujetos = new DefaultListModel<RondaAntropometrista>();
                        for(RondaAntropometrista s:sujetos){
                            modelLstSujetos.addElement(s);
                        }
                        lstSujetos.setModel(modelLstSujetos);
                        lblAntropSelected.setText(antropSelected.getNombre());
                        idRondaSeleccionada = node.getIdRonda();
                        lblRondaSelected.setText(new DataBase().getRondaById(idRondaSeleccionada).getNombre());
                        lblSujetoSelected.setText("");
                        txtMed1.setText("");
                        txtMed2.setText("");
                    }
                }
                catch(SQLException se){
                    
                }
            }
});
        
        lstSujetos.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {  
                try{
                    if (!lse.getValueIsAdjusting()) {  
                        RondaAntropometrista selection = (RondaAntropometrista)lstSujetos.getSelectedValue();
                        rondaSeleccionada = selection;
                        lblSujetoSelected.setText(rondaSeleccionada.getSujeto().getNombre());
                        txtMed1.setText(""+rondaSeleccionada.getMedicion1());
                        txtMed2.setText(""+rondaSeleccionada.getMedicion2());
                        System.out.println("ID:" +rondaSeleccionada.getId());
                    }  
                }
                catch(Exception ex){
                    //Error.mostrarMensajeError(, "Error en arbol.", "Cargando Arbol");
                    System.out.println("******************************ERROR*******************************");
                }
             } 
        });       
        RenderLista rl=new RenderLista();
        lstSujetos.setCellRenderer(rl);
        jSplitPane1.setDividerLocation(220);
    }

    
    public void editarMedicion(){
        if(rondaSeleccionada != null){
            if(!txtMed1.getText().equals("") && !txtMed2.getText().equals("")){
                if(TiposValidator.esNumeroDecimal(txtMed1) && TiposValidator.esNumeroDecimal(txtMed2)){
                    DataBase op = new DataBase();
                    rondaSeleccionada.setMedicion1(Float.parseFloat(txtMed1.getText()));
                    rondaSeleccionada.setMedicion2(Float.parseFloat(txtMed2.getText()));
                    try{
                        op.updateRondaAntropometrista(rondaSeleccionada);
                        JOptionPane.showMessageDialog(this,
                            "Mediciones modificadas exitosamente!!",
                            "Edicion de Mediciones",
                            JOptionPane.INFORMATION_MESSAGE);
                    }
                    catch(SQLException se){
                        Error.mostrarMensajeError(this, "Ocurri√≥ un error con la base de datos. \n\n"
                                + "MENSAJE: "+se.getMessage(), "Edicion de Mediciones");
                    }
                }
                else{
                    Error.mostrarMensajeError(this, 
                    "Las mediciones solo aceptan numeros.", 
                    "Edicion de Mediciones");
                }
            }
            else{
                Error.mostrarMensajeError(this, 
                    "Las mediciones no pueden estar vac√≠as.", 
                    "Edicion de Mediciones");
            }
        }
        else{
            Error.mostrarMensajeError(this, 
                    "Seleccione a un sujeto antes de editar las mediciones.", 
                    "Edicion de Mediciones");
        }
    }
    
    public void reporte1(){
        if(idRondaSeleccionada!=0){
            try{
                updateProgressBar(1, "Iniciando Reporte de Mediciones");
                lblRondaMedicion1.setText(new DataBase().getRondaById(idRondaSeleccionada).getNombre());
                Reporte r = new Reporte();
                updateProgressBar(10, "Obteniendo datos");
                JTable t = r.mediciones(idRondaSeleccionada, this);
                t.setColumnSelectionAllowed(false);
                //jScrollPane4.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
                //jScrollPane4.setBounds(t.getBounds());
                t.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102),1,false));
                //t.setBounds(5,5,500,200);
                jScrollPane4.setViewportView(t);
                jScrollPane4.setBorder(null);
                
                //t.setPreferredSize(new java.awt.Dimension(1051,1000));
                //t.setPreferredScrollableViewportSize(new java.awt.Dimension(1000,1000));
                //t.getSize(new java.awt.Dimension(1051, 1000));
                t.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                
                updateProgressBar(100, "Reporte finalizado");
            }
            catch(SQLException se){
                Error.mostrarMensajeError(this, "Ocurri√≥ un error con la base de datos. \n\n"
                                + "MENSAJE: "+se.getMessage(), "Reporte de Mediciones");
            }
        }
        else{
            Error.mostrarMensajeError(this, "Seleccione una ronda", "Reporte de Mediciones por Ronda");
        }
        resetProgessBar();
    }
    
    public void reporte2(){
        if(antropSelected!=null && idRondaSeleccionada!=0){
            Reporte r = new Reporte();
            JTable t = r.calculosPreExact(antropSelected,idRondaSeleccionada, this);
            t.setColumnSelectionAllowed(false);
            JTable tablePrecision = r.ReporteAnalisis(r.getAnalisisPrecision(),
                    "Analisis de Precisi√≥n");
            JTable tableExactitud = r.ReporteAnalisis(r.getAnalisisExactitud(),
                    "Analisis de Exactitud");
            jScrollPane3.setViewportView(t);
            jScrollPane5.setViewportView(tablePrecision);
            jScrollPane6.setViewportView(tableExactitud);
        }else{
            Error.mostrarMensajeError(this, "Seleccione un antropometrista.", "Reporte de Calculos por Antropometrista");
        }
    }
    
    public void reporte3(){
        if(idRondaSeleccionada!=0){
            Ronda ronda = null;
            try{
                ronda = new DataBase().getRondaById(idRondaSeleccionada);
                if(antropSelected==null){ 
                    antropSelected = new DataBase().getSuperviorByRonda(idRondaSeleccionada);
                }
            }
            catch(SQLException se){
                Error.mostrarMensajeError(this, "No se ha logrado obtener al supervisor de la ronda.", "Reportes");
            }
            Reporte r = new Reporte();
            updateProgressBar(1, "Calculando Datos de Antropometrista");
            List<EvaluacionAntropometrista> evaluaciones = r.calcular(idRondaSeleccionada, this);
            updateProgressBar(50, "Calculando Datos de Antropometrista");
            EvaluacionAntropometrista ea = getEvaluacionAntropometrista(antropSelected.getCodigo(), evaluaciones);
            updateProgressBar(55, "Calculando Datos de Antropometrista");
            JTable t = r.calculosPreExact(ea);
            t.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102),1,false));
            updateProgressBar(65, "Calculando Analisis de Precision");
            t.setColumnSelectionAllowed(false);
            JTable tablePrecision = r.ReporteAnalisis(ea.getPrecision(),
                    "Analisis de Precisi√≥n");
            updateProgressBar(75, "Calculando An√°lisis de Exactitud");
            JTable tableExactitud = r.ReporteAnalisis(ea.getExactitud(),
                    "Analisis de Exactitud");
            tablePrecision.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102),1,false));
            tableExactitud.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102),1,false));
            updateProgressBar(85, "Calculando Reporte de Evaluaciones");
            JTable tableEvaluaciones = r.ReporteEvaluaciones(evaluaciones, this);
            updateProgressBar(100, "Calculando Reporte de Evaluaciones");
            tableEvaluaciones.setEnabled(false);
            tableEvaluaciones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102),1,false));
            lblRondaCalcPre.setText(ronda.getNombre());
            lblAntropCalcPre.setText(antropSelected.getNombre());
            jScrollPane3.setViewportView(t);
            jScrollPane5.setViewportView(tablePrecision);
            jScrollPane6.setViewportView(tableExactitud);
            jScrollPane7.setViewportView(tableEvaluaciones);
            jScrollPane7.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        }else{
            Error.mostrarMensajeError(this, "Seleccione una ronda.", "Reporte de Evaluaciones");
        }
        resetProgessBar();
        
        
    }
    
    public void updateProgressBar(int value, String text){
        progressBar.setValue(value);
        progressBar.setString(""+value+"% "+text+"...");
        try{
            Thread.sleep(500);
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void resetProgessBar(){
        progressBar.setValue(0);
        progressBar.setString("");
        try{
            Thread.sleep(100);
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    
    public EvaluacionAntropometrista getEvaluacionAntropometrista(int codigoAntropometrista,
           List<EvaluacionAntropometrista> evaluaciones) {
        for(EvaluacionAntropometrista ea : evaluaciones){
            if(ea.getAntropometrista().getCodigo() == codigoAntropometrista){
                return ea;
            }
        }
        return null;
    }
    
}
