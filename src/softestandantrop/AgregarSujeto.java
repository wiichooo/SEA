/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package softestandantrop;

import DataBase.DataBase;
import Modelos.Antropometrista;
import Modelos.RondaAntropometrista;
import Modelos.Sujeto;
import Validation.NotEmptyValidators;
import Validation.SoloNumeroValidator;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class AgregarSujeto extends javax.swing.JDialog {

    /**
     * Creates new form AgregarSujeto
     */
    SeleccionarSujetos ss = null;
    int IdRonda = -1;
    List<Antropometrista> antropometristas;
    public AgregarSujeto() {
        super(new JFrame(), true);
        initComponents();
        ButtonGroup BtnGroup = new ButtonGroup();
        BtnGroup.add(rbFemenino);
        BtnGroup.add(rbMasculino);
        rbFemenino.setSelected(true);
        this.setLocationRelativeTo(null);
        txtNombre.setInputVerifier(new NotEmptyValidators(this, txtNombre, "Ingrese el nombre del sujeto."));
        txtEdad.setInputVerifier(new SoloNumeroValidator(this, txtEdad, "Ingrese la edad."));
        this.setVisible(true);        
    }

    AgregarSujeto(SeleccionarSujetos ss) {
        super(new JFrame(), true);
        initComponents();
        ButtonGroup BtnGroup = new ButtonGroup();
        BtnGroup.add(rbFemenino);
        BtnGroup.add(rbMasculino);
        rbFemenino.setSelected(true);
        this.setLocationRelativeTo(null);
        this.ss = ss;
        txtNombre.setInputVerifier(new NotEmptyValidators(this, txtNombre, "Ingrese el nombre del sujeto."));
        txtEdad.setInputVerifier(new SoloNumeroValidator(this, txtEdad, "Ingrese la edad."));
        this.setVisible(true);
    }
    
    AgregarSujeto(int IDRondaSelccionada, List<Antropometrista> antropometristas) {
        super(new JFrame(), true);
        initComponents();
        this.IdRonda = IDRondaSelccionada;
        this.antropometristas = antropometristas;
        ButtonGroup BtnGroup = new ButtonGroup();
        BtnGroup.add(rbFemenino);
        BtnGroup.add(rbMasculino);
        rbFemenino.setSelected(true);
        this.setLocationRelativeTo(null);
        this.ss = ss;
        txtNombre.setInputVerifier(new NotEmptyValidators(this, txtNombre, "Ingrese el nombre del sujeto."));
        txtEdad.setInputVerifier(new SoloNumeroValidator(this, txtEdad, "Ingrese la edad."));
        this.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        rbFemenino = new javax.swing.JRadioButton();
        rbMasculino = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        BtnAceptar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Sujeto");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agregar Sujeto", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Nombre:");

        jLabel2.setText("Sexo:");

        rbFemenino.setText("Femenino");
        rbFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemeninoActionPerformed(evt);
            }
        });

        rbMasculino.setText("Masculino");

        jLabel3.setText("Edad:");

        BtnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/16/Symbol Check.png"))); // NOI18N
        BtnAceptar.setText("Aceptar");
        BtnAceptar.setName("BtnAceptar"); // NOI18N
        BtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAceptarActionPerformed(evt);
            }
        });

        BtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/16/Symbol Delete.png"))); // NOI18N
        BtnCancelar.setText("Cancelar");
        BtnCancelar.setName("BtnCancelar"); // NOI18N
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BtnCancelar)
                                .addGap(4, 4, 4)
                                .addComponent(BtnAceptar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(rbFemenino)
                                        .addGap(7, 7, 7)
                                        .addComponent(rbMasculino))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 53, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rbMasculino)
                    .addComponent(rbFemenino))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnCancelar)
                            .addComponent(BtnAceptar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemeninoActionPerformed

    }//GEN-LAST:event_rbFemeninoActionPerformed

    private void BtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAceptarActionPerformed
        Sujeto sujeto;
        String sexo = "";
        if(rbFemenino.isSelected()){
            sexo = "F";
        }else if(rbMasculino.isSelected()){
            sexo = "M";
        }
        List sujetos1=new ArrayList();
        try{
             sujetos1 = new DataBase().getAllSujetos();
        }catch(SQLException se){
            JOptionPane.showMessageDialog(null, 
                                    "Ocurrió un error al obtener los sujetos.");
        }
        Sujeto s = null;
        int IDSujeto = 0;
        if(sujetos1.size() > 0){
            s = (Sujeto)sujetos1.get(sujetos1.size()-1);
            IDSujeto = s.getId()+1;
        }else{
            IDSujeto = 1;
        }
        if(!txtNombre.getText().equals("") && !txtEdad.getText().equals("")){
            sujeto = new Sujeto(IDSujeto,txtNombre.getText(), Integer.valueOf(txtEdad.getText()), sexo);       
                if(ss != null){
                    ss.agregar(sujeto);
                }else if(IdRonda != -1){
                    try{
                        new DataBase().insertarSujeto(sujeto);
                        if(insertarRondaAntropometristas(sujeto)){
                            JOptionPane.showMessageDialog(null, "Se agregó el sujeto correctamente.");
                        }
                        else{
                            JOptionPane.showMessageDialog(null, 
                                    "Ocurrió un error al ingresar el sujeto. Intente de nuevo.");
                        }
                    }
                     catch(SQLException se){
                         JOptionPane.showMessageDialog(null, 
                                    "Ocurrió un error al ingresar el sujeto. Intente de nuevo.");
                        
                    }
                }
                this.dispose();            
        }else{
            JOptionPane.showMessageDialog(null, "Ingrese los datos correctamente.");
        }
    }//GEN-LAST:event_BtnAceptarActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAceptar;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbFemenino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private boolean insertarRondaAntropometristas(Sujeto sujeto) {
        DataBase op = new DataBase();
        Iterator i = antropometristas.iterator();
        Antropometrista an;
        while(i.hasNext()){
            an = (Antropometrista)i.next();
            try{
                op.insertarRondaAntropometrista(new RondaAntropometrista(sujeto.getId(), Integer.valueOf(an.getCodigo()), IdRonda));
            }
            catch(SQLException se){
                JOptionPane.showMessageDialog(null, 
                                    "Ocurrió un error al ingresar la ronda.");
            }
        }
        return true;
    }
}
